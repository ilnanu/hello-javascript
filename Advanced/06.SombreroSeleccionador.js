/*
 * EJERCICIO:
 * Cada 1 de septiembre, el Hogwarts Express parte hacia la escuela
 * de programaci√≥n de Hogwarts para magos y brujas del c√≥digo.
 * En ella, su famoso sombrero seleccionador ayuda a los programadores
 * a encontrar su camino...
 * Desarrolla un programa que simule el comportamiento del sombrero.
 * Requisitos:
 * 1. El sombrero realizar√° 10 preguntas para determinar la casa del alumno.
 * 2. Deben existir 4 casas. Por ejemplo: Frontend, Backend, Mobile y Data.
 *    (Puedes elegir las que quieras)
 * Acciones:
 * 1. Crea un programa que solicite el nombre del alumno y realice 10
 *    preguntas, con cuatro posibles respuestas cada una.
 * 2. Cada respuesta asigna puntos a cada una de las casas (a tu elecci√≥n).
 * 3. Una vez finalizado, el sombrero indica el nombre del alumno 
 *    y a qu√© casa pertenecer√° (resuelve el posible empate de manera aleatoria,
 *    pero indic√°ndole al alumno que la decisi√≥n ha sido complicada).
 */
const readline = require("readline");

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout,
});

const casas = {
    Frontend: 0,
    Backend: 0,
    Mobile: 0,
    Data: 0,
};

const preguntas = [
    {
        pregunta: "¬øQu√© disfrutas m√°s al programar?",
        respuestas: [
            { texto: "Crear interfaces bonitas y funcionales", casa: "Frontend" },
            { texto: "Dise√±ar bases de datos y APIs robustas", casa: "Backend" },
            { texto: "Desarrollar apps que usas a diario", casa: "Mobile" },
            { texto: "Analizar datos para descubrir tendencias", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øCu√°l es tu herramienta favorita?",
        respuestas: [
            { texto: "HTML/CSS/JavaScript", casa: "Frontend" },
            { texto: "Node.js/Python", casa: "Backend" },
            { texto: "Flutter/Swift/Kotlin", casa: "Mobile" },
            { texto: "SQL/Excel/Pandas", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øQu√© prefieres en un proyecto?",
        respuestas: [
            { texto: "Que se vea genial y sea f√°cil de usar", casa: "Frontend" },
            { texto: "Que sea escalable y eficiente", casa: "Backend" },
            { texto: "Que funcione perfecto en el m√≥vil", casa: "Mobile" },
            { texto: "Que permita tomar decisiones con datos", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øCon qu√© te sientes m√°s identificado?",
        respuestas: [
            { texto: "Dise√±ador de interacciones", casa: "Frontend" },
            { texto: "Arquitecto de sistemas", casa: "Backend" },
            { texto: "Desarrollador en movimiento", casa: "Mobile" },
            { texto: "Detective de datos", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øQu√© curso te gustar√≠a hacer?",
        respuestas: [
            { texto: "UX/UI design", casa: "Frontend" },
            { texto: "Microservicios", casa: "Backend" },
            { texto: "Desarrollo de apps nativas", casa: "Mobile" },
            { texto: "Machine learning", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øQu√© valoras m√°s?",
        respuestas: [
            { texto: "Est√©tica", casa: "Frontend" },
            { texto: "Rendimiento", casa: "Backend" },
            { texto: "Comodidad y accesibilidad", casa: "Mobile" },
            { texto: "Precisi√≥n y resultados", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øD√≥nde te ves trabajando?",
        respuestas: [
            { texto: "Dise√±ando webs para startups", casa: "Frontend" },
            { texto: "En el equipo core de arquitectura", casa: "Backend" },
            { texto: "Liderando una app de fitness", casa: "Mobile" },
            { texto: "En un laboratorio analizando datos", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øQu√© prefieres solucionar?",
        respuestas: [
            { texto: "Problemas de usabilidad", casa: "Frontend" },
            { texto: "Errores de l√≥gica y rendimiento", casa: "Backend" },
            { texto: "Incompatibilidades entre dispositivos", casa: "Mobile" },
            { texto: "Errores en modelos predictivos", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øCon cu√°l lenguaje te llevas mejor?",
        respuestas: [
            { texto: "JavaScript", casa: "Frontend" },
            { texto: "Python", casa: "Backend" },
            { texto: "Dart/Kotlin", casa: "Mobile" },
            { texto: "R/SQL", casa: "Data" },
        ],
    },
    {
        pregunta: "¬øQu√© prefieres leer?",
        respuestas: [
            { texto: "Gu√≠as de estilos y dise√±o", casa: "Frontend" },
            { texto: "Documentaci√≥n t√©cnica de APIs", casa: "Backend" },
            { texto: "Changelogs de versiones m√≥viles", casa: "Mobile" },
            { texto: "Papers cient√≠ficos", casa: "Data" },
        ],
    },
];

let nombre = "";
let indice = 0;

function preguntar() {
    if (indice < preguntas.length) {
        const p = preguntas[indice];
        console.log(`\n${indice + 1}. ${p.pregunta}`);
        p.respuestas.forEach((r, i) => console.log(` ${i + 1}. ${r.texto}`));
        rl.question("Tu elecci√≥n (1-4): ", (respuesta) => {
            const i = parseInt(respuesta) - 1;
            if (i >= 0 && i < 4) {
                casas[p.respuestas[i].casa]++;
                indice++;
                preguntar();
            } else {
                console.log("Por favor, selecciona una opci√≥n v√°lida.");
                preguntar();
            }
        });
    } else {
        determinarCasa();
    }
}

function determinarCasa() {
    const max = Math.max(...Object.values(casas));
    const candidatas = Object.entries(casas).filter(([_, v]) => v === max);
    let casaFinal = candidatas[Math.floor(Math.random() * candidatas.length)][0];

    console.log(`\nüé© Mmm... ${nombre}... has respondido sabiamente...`);

    if (candidatas.length > 1) {
        console.log(`Ha sido una decisi√≥n dif√≠cil entre varias casas... ü§î`);
    }

    console.log(`¬°Pero finalmente, perteneces a... üßô‚Äç‚ôÇÔ∏è **${casaFinal}**!\n`);
    rl.close();
}

rl.question("üéì ¬øCu√°l es tu nombre, joven aprendiz? ", (respuesta) => {
    nombre = respuesta;
    console.log(`\nBienvenido, ${nombre}. El Sombrero Seleccionador est√° listo...\n`);
    preguntar();
});
